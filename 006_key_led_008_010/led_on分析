
功能：实现点灯程序的c实现，需要实现按键控制灯的亮和灭
	自己写一个汇编程序start.S
	自己写一个c程序key_led.c
	自己建立一个引脚.h 文件，里面把引脚的指针通过宏控设置简洁
	
start.S: 关掉看门狗，自动判断启动方式设置栈 调用main函数 ，死循环

.text
.global _start

_start:
	//关掉看门狗
	ldr r0 , =0x53000000
	ldr r1 , #0
	str r1 , [r0]
	
	//判断启动方式，设置栈
	ldr r1 , #0
	ldr r0 , [r1] //备份0地址的值
	str r1 , [r1] //写0地址
	ldr r2 , [r1] //读0地址
    cmp r2 , r1   //比较两个值
	ldr sp , =0x40000000 + 4096
	moveq  sp , #4096 //相等设置sp
	streq  r0 , [r1] //恢复原来的值
	
	//调用main函数
	ldr r0 , #4
	bl main

halt：
	b halt


key_led.c  延迟函数，设置按键和灯的引脚，通过按键的键值，点亮灯
	
	void delay（int d）；//无返回值
	不断的减减延迟
	int main(void);//返回0
	
	//直接使用指针清位和置位
	volatile unsigned int *gpfcon = (volatile unsigned int *)0x56000050;
	*pGPFCON &= ~((3<<8) | (3<<10) | (3<<12));//清相应的位
	*pGPFCON |=  ((1<<8) | (1<<10) | (1<<12));//置位

	if(val & (1<<0))//判断第0位是否为1,1是松开，0是按下


s3c2440.h: 使用相关宏，将一个字符串代表读指针操作
#ifndef  __s3c2440_soc_h
#define  __s3c2440_soc_h

#define __REG(X)    *((volatile unsigned  int * ) (x)) //加volatile防止编译器优化
#define GPFCON    __REG(0x56000050)

	

